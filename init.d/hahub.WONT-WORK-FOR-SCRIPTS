#! /bin/sh
### BEGIN INIT INFO
# Provides:          hahub
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts HAHUB daemon.
# Description:       HAHUB is used to provide
#                    home automation services
### END INIT INFO

build_args ()
{
	ARGS="$*"

	# This is not required for HAHUB, keeping these here (from LIRC) for reference
	# if [ -n "$DEVICE" ] && [ "$DEVICE" != "none" ]; then
	# 	ARGS="--device=$DEVICE $ARGS"
	# fi
	# if [ -n "$DRIVER" ] && [ "$DRIVER" != "none" ]; then
	# 	ARGS="--driver=$DRIVER $ARGS"
	# fi

	echo $ARGS
}

. /lib/lsb/init-functions

test -f /usr/sbin/hahubd.py || exit 0

START_HAHUBD=true

if [ ! -f /etc/hahub/hahubd.conf ] || grep -q "^#UNCONFIGURED" /etc/hahub/hahubd.conf; then
	if [ "$1" = "start" ]; then
		log_success_msg "No valid /etc/hahub/hahubd.conf has been found."
		log_success_msg "HA Hub support has been disabled."
		log_success_msg "Reconfigure HAHUB or manually replace /etc/hahub/hahubd.conf to enable."
	fi

	START_HAHUBD=false
fi

case "$1" in
	start)
		[ -d "/var/run/hahub" ] || mkdir -p "/var/run/hahub"

		if [ "$START_HAHUBD" = "true" ]; then
			log_daemon_msg "Starting HA HUB daemon: hahubd.py"
			HAHUBD_ARGS=`build_args $HAHUBD_ARGS`

			if [ ! -z "$HAHUBD_ARGS" ]; then
				start-stop-daemon --start --quiet --oknodo --exec /usr/sbin/hahubd.py -- $HAHUBD_ARGS < /dev/null
				log_end_msg $?
			else
				log_end_msg 1
			fi
		fi
		;;
	stop)
		if [ "$START_HAHUBD" = "true" ]; then
			log_daemon_msg "Stopping HA HUB daemon: hahubd.py"
			start-stop-daemon --stop --quiet --exec /usr/sbin/hahubd.py
			log_end_msg $?
		fi
		;;
	reload|force-reload)
		if [ "$START_HAHUBD" = "true" ]; then
			start-stop-daemon --stop --quiet --signal 1 --exec /usr/sbin/hahubd.py
		fi
		;;
	restart)
		$0 stop
		sleep 1
		$0 start
		;;
	*)
		echo "Usage: /etc/init.d/hahubd {start|stop|reload|restart|force-reload}"
	exit 1
esac

exit 0
